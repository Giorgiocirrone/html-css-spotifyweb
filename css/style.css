/*Reset*/

* {

    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


/*strumenti */

.flex {

    display: flex;
}

.container {

    margin: 0 auto;

    max-width: 1200px;
    /*rivedi , intanto tieni come bozza*/

}


/*impostazione layout  principale*/



/*fase uno dobbiamo impostare il top-content e il footer*/


.top-content {


    background-color: red;

    height: calc(100vh-100px);

    overflow-y: auto;
    display: flex;
}

.side-bar {
    background-color: blue;
    flex-basis: 50px;
    /*vogliamo che la misura sia fissa */
    flex-shrink: 0;

}



main {

    background-color: rgb(205, 127, 31);
    flex-grow: 1;
    overflow: auto;


}

/*questo serve perchè potremmo avere più header*/
main header {

    height: 80px;
    background-color: rgba(255, 0, 0, 0.379);
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    /*metti sempre le coordiinate */





}


footer {



    background-color: yellow;
    height: 100px;
}




@media screen and (min-width:576px) {

    .side-bar {

        flex-basis: 250px;
    }

}

















/*inizia con analisi 

seganti tutti gli strumenti che ti servonoi e di colori 

abbozza uno schema 


inizia ad impostare il layout



appunto lezione , se metto 100 lorem ipsum non vengono contenuti , usa overflow verticale


con il column nel flex-wrapper esercizio , nel footer metti flexbasis 



con questa soluzione però il cordice corre il rischio di sballarsi tutto 

nell'header non fare fixed  o positin relative usa sticky







.top-content {


    background-color: red;
    flex-grow: 1;/*se non metti un altezza non funziona */

/*con questa soluzione il footer ha 100 e il topo content tutto meno 100 ma signfica cresci quanto vuoiquindi metti il shrink*/

/*altrimenti le altezze si sommano */

/* overflow-y: auto;
}


.container-flex{
    
    display: flex;
    flex-direction: column;
    height: 100vh;
}




footer {

    flex-shrink: 0;

    background-color: yellow;
    flex-basis: 100px; /*cambia l'asse principale */